//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Bright.Serialization;

namespace proto.test
{
    public sealed class Foo : Bright.Net.Codecs.Protocol
    {
         public int X;

         public test.AllType Y;

         public test.Simple Z;


        public Foo()
        {
        }

        public Foo(Bright.Common.NotNullInitialization _)
        {
            Y = new test.AllType();
            Z = new test.Simple();
        }
        public const int __ID__ = 1234;

        public override int GetTypeId()
        {
            return __ID__;
        }

        public override void Serialize(ByteBuf _buf)
        {
            _buf.WriteInt(X);
            test.AllType.SerializeAllType(_buf, Y);
            test.Simple.SerializeSimple(_buf, Z);
        }

        public override void Deserialize(ByteBuf _buf)
        {
            X = _buf.ReadInt();
            Y = test.AllType.DeserializeAllType(_buf);
            Z = test.Simple.DeserializeSimple(_buf);
        }

        public override void Reset()
        {
            throw new System.NotImplementedException();
        }

        public override object Clone()
        {
            throw new System.NotImplementedException();
        }

        public override string ToString()
        {
            return "test.Foo{ "
            + "X:" + X + ","
            + "Y:" + Y + ","
            + "Z:" + Z + ","
            + "}";
        }
    }

}
