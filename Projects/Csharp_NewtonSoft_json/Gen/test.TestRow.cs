
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace cfg.test
{

public sealed partial class TestRow : Luban.BeanBase
{
    public TestRow(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        X = (int)_obj.GetValue("x");
        Y = (bool)_obj.GetValue("y");
        Z = (string)_obj.GetValue("z");
        A = test.Test3.DeserializeTest3(_obj.GetValue("a"));
        { var __json0 = _obj.GetValue("b"); B = new System.Collections.Generic.List<int>((__json0 as JArray).Count); foreach(JToken __e0 in __json0) { int __v0;  __v0 = (int)__e0;  B.Add(__v0); }   }
    }

    public static TestRow DeserializeTestRow(JToken _buf)
    {
        return new test.TestRow(_buf);
    }

    public readonly int X;
    public readonly bool Y;
    public readonly string Z;
    public readonly test.Test3 A;
    public readonly System.Collections.Generic.List<int> B;


    public const int __ID__ = -543222164;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        A?.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "x:" + X + ","
        + "y:" + Y + ","
        + "z:" + Z + ","
        + "a:" + A + ","
        + "b:" + Luban.StringUtil.CollectionToString(B) + ","
        + "}";
    }
}
}

