
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace cfg.ai
{

public sealed partial class IsAtLocation : ai.Decorator
{
    public IsAtLocation(JToken _buf)  : base(_buf) 
    {
        JObject _obj = _buf as JObject;
        AcceptableRadius = (float)_obj.GetValue("acceptable_radius");
        KeyboardKey = (string)_obj.GetValue("keyboard_key");
        InverseCondition = (bool)_obj.GetValue("inverse_condition");
    }

    public static IsAtLocation DeserializeIsAtLocation(JToken _buf)
    {
        return new ai.IsAtLocation(_buf);
    }

    public readonly float AcceptableRadius;
    public readonly string KeyboardKey;
    public readonly bool InverseCondition;


    public const int __ID__ = 1255972344;
    public override int GetTypeId() => __ID__;

    public override void ResolveRef(Tables tables)
    {
        base.ResolveRef(tables);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "nodeName:" + NodeName + ","
        + "flowAbortMode:" + FlowAbortMode + ","
        + "acceptableRadius:" + AcceptableRadius + ","
        + "keyboardKey:" + KeyboardKey + ","
        + "inverseCondition:" + InverseCondition + ","
        + "}";
    }
}
}

