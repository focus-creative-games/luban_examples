//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.ai
{

public sealed partial class UeWait :  ai.Task 
{
    public UeWait(ByteBuf _buf)  : base(_buf) 
    {
        WaitTime = _buf.ReadFloat();
        RandomDeviation = _buf.ReadFloat();
        PostInit();
    }

    public static UeWait DeserializeUeWait(ByteBuf _buf)
    {
        return new ai.UeWait(_buf);
    }

    public float WaitTime { get; private set; }
    public float RandomDeviation { get; private set; }

    public const int __ID__ = -512994101;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NodeName:" + NodeName + ","
        + "Decorators:" + Bright.Common.StringUtil.CollectionToString(Decorators) + ","
        + "Services:" + Bright.Common.StringUtil.CollectionToString(Services) + ","
        + "IgnoreRestartSelf:" + IgnoreRestartSelf + ","
        + "WaitTime:" + WaitTime + ","
        + "RandomDeviation:" + RandomDeviation + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
