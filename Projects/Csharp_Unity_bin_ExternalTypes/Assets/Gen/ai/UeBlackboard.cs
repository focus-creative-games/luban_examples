//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.ai
{

public sealed partial class UeBlackboard :  ai.Decorator 
{
    public UeBlackboard(ByteBuf _buf)  : base(_buf) 
    {
        NotifyObserver = (ai.ENotifyObserverMode)_buf.ReadInt();
        BlackboardKey = _buf.ReadString();
        KeyQuery = ai.KeyQueryOperator.DeserializeKeyQueryOperator(_buf);
        PostInit();
    }

    public static UeBlackboard DeserializeUeBlackboard(ByteBuf _buf)
    {
        return new ai.UeBlackboard(_buf);
    }

    public ai.ENotifyObserverMode NotifyObserver { get; private set; }
    public string BlackboardKey { get; private set; }
    public ai.KeyQueryOperator KeyQuery { get; private set; }

    public const int __ID__ = -315297507;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        KeyQuery?.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        KeyQuery?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NodeName:" + NodeName + ","
        + "FlowAbortMode:" + FlowAbortMode + ","
        + "NotifyObserver:" + NotifyObserver + ","
        + "BlackboardKey:" + BlackboardKey + ","
        + "KeyQuery:" + KeyQuery + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
