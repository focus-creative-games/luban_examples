//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.ai
{

public sealed partial class SimpleParallel :  ai.ComposeNode 
{
    public SimpleParallel(ByteBuf _buf)  : base(_buf) 
    {
        FinishMode = (ai.EFinishMode)_buf.ReadInt();
        MainTask = ai.Task.DeserializeTask(_buf);
        BackgroundNode = ai.FlowNode.DeserializeFlowNode(_buf);
        PostInit();
    }

    public static SimpleParallel DeserializeSimpleParallel(ByteBuf _buf)
    {
        return new ai.SimpleParallel(_buf);
    }

    public ai.EFinishMode FinishMode { get; private set; }
    public ai.Task MainTask { get; private set; }
    public ai.FlowNode BackgroundNode { get; private set; }

    public const int __ID__ = -1952582529;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        MainTask?.Resolve(_tables);
        BackgroundNode?.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        MainTask?.TranslateText(translator);
        BackgroundNode?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NodeName:" + NodeName + ","
        + "Decorators:" + Bright.Common.StringUtil.CollectionToString(Decorators) + ","
        + "Services:" + Bright.Common.StringUtil.CollectionToString(Services) + ","
        + "FinishMode:" + FinishMode + ","
        + "MainTask:" + MainTask + ","
        + "BackgroundNode:" + BackgroundNode + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
