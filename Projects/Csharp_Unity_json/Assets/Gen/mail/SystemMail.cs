//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.mail
{

public sealed partial class SystemMail :  Bright.Config.BeanBase 
{
    public SystemMail(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["title"].IsString) { throw new SerializationException(); }  Title = _json["title"]; }
        { if(!_json["sender"].IsString) { throw new SerializationException(); }  Sender = _json["sender"]; }
        { if(!_json["content"].IsString) { throw new SerializationException(); }  Content = _json["content"]; }
        { var _json1 = _json["award"]; if(!_json1.IsArray) { throw new SerializationException(); } Award = new System.Collections.Generic.List<int>(_json1.Count); foreach(JSONNode __e in _json1.Children) { int __v;  { if(!__e.IsNumber) { throw new SerializationException(); }  __v = __e; }  Award.Add(__v); }   }
        PostInit();
    }

    public SystemMail(int id, string title, string sender, string content, System.Collections.Generic.List<int> award ) 
    {
        this.Id = id;
        this.Title = title;
        this.Sender = sender;
        this.Content = content;
        this.Award = award;
        PostInit();
    }

    public static SystemMail DeserializeSystemMail(JSONNode _json)
    {
        return new mail.SystemMail(_json);
    }

    public int Id { get; private set; }
    public string Title { get; private set; }
    public string Sender { get; private set; }
    public string Content { get; private set; }
    public System.Collections.Generic.List<int> Award { get; private set; }
    public System.Collections.Generic.List<bonus.DropInfo> Award_Ref { get; private set; }

    public const int __ID__ = 1214073149;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        { bonus.TbDrop __table = (bonus.TbDrop)_tables["bonus.TbDrop"]; this.Award_Ref = new System.Collections.Generic.List<bonus.DropInfo>(); foreach(var __e in Award) { this.Award_Ref.Add(__table.GetOrDefault(__e)); } }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Title:" + Title + ","
        + "Sender:" + Sender + ","
        + "Content:" + Content + ","
        + "Award:" + Bright.Common.StringUtil.CollectionToString(Award) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
