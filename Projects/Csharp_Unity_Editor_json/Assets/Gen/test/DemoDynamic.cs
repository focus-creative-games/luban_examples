
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;

namespace editor.cfg.test
{

public abstract class DemoDynamic :  Luban.EditorBeanBase 
{
    public DemoDynamic()
    {
    }
    public abstract string GetTypeStr();

    private int _typeIndex = -1;
    public int TypeIndex
    {
        get => _typeIndex;
        set
        {
            if(_typeIndex == value)
            {
                return;
            }
            _typeIndex = value;
            Instance = Create(Types[value]);
        }
    }
    public DemoDynamic Instance { get; set;}
    public static List<string> Types = new List<string>()
    {
        "test.DemoD2",
        "test.DemoE1",
        "test.login.RoleInfo",
        "test.DemoD5",
    };

    public static DemoDynamic Create(string type)
    {
        switch (type)
        {
            case "test.DemoD2":   
            case "DemoD2":return new test.DemoD2();
            case "test.DemoE1":   
            case "DemoE1":return new test.DemoE1();
            case "test.login.RoleInfo":return new test.login.RoleInfo();
            case "test.DemoD5":   
            case "DemoD5":return new test.DemoD5();
            default: return null;
        }
    }


    public override void Render()
    {
        UnityEditor.EditorGUILayout.BeginVertical();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("x1", GUILayout.Width(100));
        x1 = UnityEditor.EditorGUILayout.IntField(x1, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.EndVertical();
    }

    public static DemoDynamic LoadJsonDemoDynamic(SimpleJSON.JSONNode _json)
    {
        string type = _json["$type"];
        DemoDynamic obj;
        switch (type)
        {
            case "test.DemoD2":   
            case "DemoD2":obj = new test.DemoD2(); break;
            case "test.DemoE1":   
            case "DemoE1":obj = new test.DemoE1(); break;
            case "test.login.RoleInfo":obj = new test.login.RoleInfo(); break;
            case "test.DemoD5":   
            case "DemoD5":obj = new test.DemoD5(); break;
            default: throw new SerializationException();
        }
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDemoDynamic(DemoDynamic _obj, SimpleJSON.JSONNode _json)
    {
        _json["$type"] = _obj.GetTypeStr();
        _obj.Instance.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int x1;
    public UnityEngine.Object x1_UnityObject;

    public override string ToString()
    {
        return "{ "
        + "x1:" + x1 + ","
        + "}";
    }
}

}

