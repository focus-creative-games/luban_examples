
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;

namespace editor.cfg.test
{

public sealed class TestRef :  Luban.EditorBeanBase 
{
    public TestRef()
    {
            a1 = System.Array.Empty<int>();
            a2 = System.Array.Empty<int>();
            b1 = new System.Collections.Generic.List<int>();
            b2 = new System.Collections.Generic.List<int>();
            c1 = new System.Collections.Generic.List<int>();
            c2 = new System.Collections.Generic.List<int>();
            d1 = new System.Collections.Generic.List<object[]>();
            d2 = new System.Collections.Generic.List<object[]>();
            e3 = "";
            f3 = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  x1 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x1_2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  x12 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  x2 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  x3 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["x4"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  x4 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["a1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int __n0 = _fieldJson.Count; a1 = new int[__n0]; int __i0=0; foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  a1[__i0++] = __v0; }  
            }
        }
        
        { 
            var _fieldJson = _json["a2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } int __n0 = _fieldJson.Count; a2 = new int[__n0]; int __i0=0; foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  a2[__i0++] = __v0; }  
            }
        }
        
        { 
            var _fieldJson = _json["b1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } b1 = new System.Collections.Generic.List<int>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  b1.Add(__v0); }  
            }
        }
        
        { 
            var _fieldJson = _json["b2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } b2 = new System.Collections.Generic.List<int>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  b2.Add(__v0); }  
            }
        }
        
        { 
            var _fieldJson = _json["c1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } c1 = new System.Collections.Generic.List<int>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  c1.Add(__v0); }  
            }
        }
        
        { 
            var _fieldJson = _json["c2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } c2 = new System.Collections.Generic.List<int>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __v0;  if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0;  c2.Add(__v0); }  
            }
        }
        
        { 
            var _fieldJson = _json["d1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } d1 = new System.Collections.Generic.List<object[]>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __k0;  if(!__e0[0].IsNumber) { throw new SerializationException(); }  __k0 = __e0[0]; int __v0;  if(!__e0[1].IsNumber) { throw new SerializationException(); }  __v0 = __e0[1];  d1.Add(new object[] { __k0, __v0 }); }  
            }
        }
        
        { 
            var _fieldJson = _json["d2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsArray) { throw new SerializationException(); } d2 = new System.Collections.Generic.List<object[]>(); foreach(SimpleJSON.JSONNode __e0 in _fieldJson.Children) { int __k0;  if(!__e0[0].IsNumber) { throw new SerializationException(); }  __k0 = __e0[0]; int __v0;  if(!__e0[1].IsNumber) { throw new SerializationException(); }  __v0 = __e0[1];  d2.Add(new object[] { __k0, __v0 }); }  
            }
        }
        
        { 
            var _fieldJson = _json["e1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  e1 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["e2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  e2 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["e3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  e3 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["f1"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  f1 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["f2"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  f2 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["f3"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  f3 = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["s1"];
            if (_fieldJson != null)
            {
                
                if (!_fieldJson.IsObject)
                {
                    throw new SerializationException();
                }
                s1 = test.RefDynamicBase.LoadJsonRefDynamicBase(_fieldJson);
                var __index0 = test.RefDynamicBase.Types.IndexOf(s1.GetTypeStr());
                if (__index0 == -1)
                {
                    throw new SerializationException();
                }
                s1.TypeIndex = __index0;
                s1.Instance = test.RefDynamicBase.LoadJsonRefDynamicBase(_fieldJson);
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["id"] = new JSONNumber(id);
        }
        {
            _json["x1"] = new JSONNumber(x1);
        }
        {
            _json["x1_2"] = new JSONNumber(x12);
        }
        {
            _json["x2"] = new JSONNumber(x2);
        }
        {
            _json["x3"] = new JSONNumber(x3);
        }
        {
            _json["x4"] = new JSONNumber(x4);
        }
        {

            if (a1 == null) { throw new System.ArgumentNullException(); }
            { var __cjson0 = new JSONArray(); foreach(var __e0 in a1) { __cjson0["null"] = new JSONNumber(__e0); } _json["a1"] = __cjson0; }
        }
        {

            if (a2 == null) { throw new System.ArgumentNullException(); }
            { var __cjson0 = new JSONArray(); foreach(var __e0 in a2) { __cjson0["null"] = new JSONNumber(__e0); } _json["a2"] = __cjson0; }
        }
        {

            if (b1 == null) { throw new System.ArgumentNullException(); }
            { var __cjson0 = new JSONArray(); foreach(var __e0 in b1) { __cjson0["null"] = new JSONNumber(__e0); } _json["b1"] = __cjson0; }
        }
        {

            if (b2 == null) { throw new System.ArgumentNullException(); }
            { var __cjson0 = new JSONArray(); foreach(var __e0 in b2) { __cjson0["null"] = new JSONNumber(__e0); } _json["b2"] = __cjson0; }
        }
        {

            if (c1 == null) { throw new System.ArgumentNullException(); }
            { var __cjson0 = new JSONArray(); foreach(var __e0 in c1) { __cjson0["null"] = new JSONNumber(__e0); } _json["c1"] = __cjson0; }
        }
        {

            if (c2 == null) { throw new System.ArgumentNullException(); }
            { var __cjson0 = new JSONArray(); foreach(var __e0 in c2) { __cjson0["null"] = new JSONNumber(__e0); } _json["c2"] = __cjson0; }
        }
        {

            if (d1 == null) { throw new System.ArgumentNullException(); }
            {
                var __cjson0 = new JSONArray();
                foreach(var __e0 in d1)
                {
                    var __entry0 = new JSONArray();
                    __cjson0[null] = __entry0;
                    __entry0["null"] = new JSONNumber((int)__e0[0]);
                    __entry0["null"] = new JSONNumber((int)__e0[1]);
                }
                _json["d1"] = __cjson0;
            }
        }
        {

            if (d2 == null) { throw new System.ArgumentNullException(); }
            {
                var __cjson0 = new JSONArray();
                foreach(var __e0 in d2)
                {
                    var __entry0 = new JSONArray();
                    __cjson0[null] = __entry0;
                    __entry0["null"] = new JSONNumber((int)__e0[0]);
                    __entry0["null"] = new JSONNumber((int)__e0[1]);
                }
                _json["d2"] = __cjson0;
            }
        }
        {
            _json["e1"] = new JSONNumber(e1);
        }
        {
            _json["e2"] = new JSONNumber(e2);
        }
        {

            if (e3 == null) { throw new System.ArgumentNullException(); }
            _json["e3"] = new JSONString(e3);
        }
        {
            _json["f1"] = new JSONNumber(f1);
        }
        {
            _json["f2"] = new JSONNumber(f2);
        }
        {

            if (f3 == null) { throw new System.ArgumentNullException(); }
            _json["f3"] = new JSONString(f3);
        }
        {

            if (s1 == null) { throw new System.ArgumentNullException(); }
            { var __bjson = new JSONObject();  test.RefDynamicBase.SaveJsonRefDynamicBase(s1, __bjson); _json["s1"] = __bjson; }
        }
    }


    public override void Render()
    {
        UnityEditor.EditorGUILayout.BeginVertical();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("id", GUILayout.Width(100));
        id = UnityEditor.EditorGUILayout.IntField(id, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("x1", GUILayout.Width(100));
        x1 = UnityEditor.EditorGUILayout.IntField(x1, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("x1_2", GUILayout.Width(100));
        x12 = UnityEditor.EditorGUILayout.IntField(x12, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("x2", GUILayout.Width(100));
        x2 = UnityEditor.EditorGUILayout.IntField(x2, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("x3", GUILayout.Width(100));
        x3 = UnityEditor.EditorGUILayout.IntField(x3, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("x4", GUILayout.Width(100));
        x4 = UnityEditor.EditorGUILayout.IntField(x4, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("a1", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = a1.Length;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    var __list0 = new System.Collections.Generic.List<int>(a1);
                    __list0.RemoveAt(__i0);
                    a1 = __list0.ToArray();
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                int __e0 = a1[__i0];
                __e0 = UnityEditor.EditorGUILayout.IntField(__e0, GUILayout.Width(150));;
                a1[__i0] = __e0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                var __list0 = new System.Collections.Generic.List<int>(a1);
                __list0.Add(default);
                a1 = __list0.ToArray();
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("a2", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = a2.Length;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    var __list0 = new System.Collections.Generic.List<int>(a2);
                    __list0.RemoveAt(__i0);
                    a2 = __list0.ToArray();
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                int __e0 = a2[__i0];
                __e0 = UnityEditor.EditorGUILayout.IntField(__e0, GUILayout.Width(150));;
                a2[__i0] = __e0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                var __list0 = new System.Collections.Generic.List<int>(a2);
                __list0.Add(default);
                a2 = __list0.ToArray();
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("b1", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = b1.Count;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    b1.RemoveAt(__i0);
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                int __e0 = b1[__i0];
                __e0 = UnityEditor.EditorGUILayout.IntField(__e0, GUILayout.Width(150));;
                b1[__i0] = __e0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                b1.Add(default);
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("b2", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = b2.Count;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    b2.RemoveAt(__i0);
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                int __e0 = b2[__i0];
                __e0 = UnityEditor.EditorGUILayout.IntField(__e0, GUILayout.Width(150));;
                b2[__i0] = __e0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                b2.Add(default);
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("c1", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = c1.Count;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    c1.RemoveAt(__i0);
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                int __e0 = c1[__i0];
                __e0 = UnityEditor.EditorGUILayout.IntField(__e0, GUILayout.Width(150));;
                c1[__i0] = __e0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                c1.Add(default);
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("c2", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = c2.Count;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    c2.RemoveAt(__i0);
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                int __e0 = c2[__i0];
                __e0 = UnityEditor.EditorGUILayout.IntField(__e0, GUILayout.Width(150));;
                c2[__i0] = __e0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                c2.Add(default);
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("d1", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = d1.Count;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    d1.RemoveAt(__i0);
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                var __e0 = d1[__i0];
                int __key0 = default;
                int __value0 = default;
                if (__e0 == null)
                {
                    __e0 = new object[2] { __key0, __value0 };
                    d1[__i0] = __e0;
                }
                else
                {
                    __key0 = (int)__e0[0];
                    __value0 = (int)__e0[1];
                }
                __key0 = UnityEditor.EditorGUILayout.IntField(__key0, GUILayout.Width(150));;
                __value0 = UnityEditor.EditorGUILayout.IntField(__value0, GUILayout.Width(150));;
                __e0[0] = __key0;
                __e0[1] = __value0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                d1.Add(new object[2]);
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("d2", GUILayout.Width(100));
        {
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            int __n0 = d2.Count;
            for (int __i0 = 0; __i0 < __n0; __i0++)
            {
                UnityEditor.EditorGUILayout.BeginHorizontal();
                if (GUILayout.Button("-", GUILayout.Width(20)))
                {
                    d2.RemoveAt(__i0);
                    UnityEditor.EditorGUILayout.EndHorizontal();
                    break;
                }
                UnityEditor.EditorGUILayout.LabelField(__i0.ToString(), GUILayout.Width(20));
                var __e0 = d2[__i0];
                int __key0 = default;
                int __value0 = default;
                if (__e0 == null)
                {
                    __e0 = new object[2] { __key0, __value0 };
                    d2[__i0] = __e0;
                }
                else
                {
                    __key0 = (int)__e0[0];
                    __value0 = (int)__e0[1];
                }
                __key0 = UnityEditor.EditorGUILayout.IntField(__key0, GUILayout.Width(150));;
                __value0 = UnityEditor.EditorGUILayout.IntField(__value0, GUILayout.Width(150));;
                __e0[0] = __key0;
                __e0[1] = __value0;
                UnityEditor.EditorGUILayout.EndHorizontal();
            }
            if (GUILayout.Button("+", GUILayout.Width(20)))
            {
                d2.Add(new object[2]);
            }
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("e1", GUILayout.Width(100));
        e1 = UnityEditor.EditorGUILayout.IntField(e1, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("e2", GUILayout.Width(100));
        e2 = UnityEditor.EditorGUILayout.LongField(e2, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("e3", GUILayout.Width(100));
        e3 = UnityEditor.EditorGUILayout.TextField(e3, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("f1", GUILayout.Width(100));
        f1 = UnityEditor.EditorGUILayout.IntField(f1, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("f2", GUILayout.Width(100));
        f2 = UnityEditor.EditorGUILayout.LongField(f2, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("f3", GUILayout.Width(100));
        f3 = UnityEditor.EditorGUILayout.TextField(f3, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("s1", GUILayout.Width(100));
        {
            var __list0 = test.RefDynamicBase.Types.Select(t => new GUIContent(t)).ToArray();
            UnityEditor.EditorGUILayout.BeginVertical("Box");
            if (s1 == null)
            {
                s1 = new test.RefBean();
                s1.TypeIndex = 0;
            }
            UnityEditor.EditorGUILayout.BeginHorizontal();
            UnityEditor.EditorGUILayout.LabelField("类型", GUILayout.Width(100));
            s1.TypeIndex = UnityEditor.EditorGUILayout.Popup(s1.TypeIndex, __list0, GUILayout.Width(200));
            UnityEditor.EditorGUILayout.EndHorizontal();
            s1.Instance.Render();
            UnityEditor.EditorGUILayout.EndVertical();
        }
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.EndVertical();
    }

    public static TestRef LoadJsonTestRef(SimpleJSON.JSONNode _json)
    {
        TestRef obj = new test.TestRef();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonTestRef(TestRef _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public int id;
    public UnityEngine.Object id_UnityObject;
    public int x1;
    public UnityEngine.Object x1_UnityObject;
    public int x12;
    public UnityEngine.Object x12_UnityObject;
    public int x2;
    public UnityEngine.Object x2_UnityObject;
    public int x3;
    public UnityEngine.Object x3_UnityObject;
    public int x4;
    public UnityEngine.Object x4_UnityObject;
    public int[] a1;
    public UnityEngine.Object a1_UnityObject;
    public int[] a2;
    public UnityEngine.Object a2_UnityObject;
    public System.Collections.Generic.List<int> b1;
    public UnityEngine.Object b1_UnityObject;
    public System.Collections.Generic.List<int> b2;
    public UnityEngine.Object b2_UnityObject;
    public System.Collections.Generic.List<int> c1;
    public UnityEngine.Object c1_UnityObject;
    public System.Collections.Generic.List<int> c2;
    public UnityEngine.Object c2_UnityObject;
    public System.Collections.Generic.List<object[]> d1;
    public UnityEngine.Object d1_UnityObject;
    public System.Collections.Generic.List<object[]> d2;
    public UnityEngine.Object d2_UnityObject;
    public int e1;
    public UnityEngine.Object e1_UnityObject;
    public long e2;
    public UnityEngine.Object e2_UnityObject;
    public string e3;
    public UnityEngine.Object e3_UnityObject;
    public int f1;
    public UnityEngine.Object f1_UnityObject;
    public long f2;
    public UnityEngine.Object f2_UnityObject;
    public string f3;
    public UnityEngine.Object f3_UnityObject;
    public test.RefDynamicBase s1;
    public UnityEngine.Object s1_UnityObject;

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "x1:" + x1 + ","
        + "x12:" + x12 + ","
        + "x2:" + x2 + ","
        + "x3:" + x3 + ","
        + "x4:" + x4 + ","
        + "a1:" + Luban.StringUtil.CollectionToString(a1) + ","
        + "a2:" + Luban.StringUtil.CollectionToString(a2) + ","
        + "b1:" + Luban.StringUtil.CollectionToString(b1) + ","
        + "b2:" + Luban.StringUtil.CollectionToString(b2) + ","
        + "c1:" + Luban.StringUtil.CollectionToString(c1) + ","
        + "c2:" + Luban.StringUtil.CollectionToString(c2) + ","
        + "d1:" + Luban.StringUtil.CollectionToString(d1) + ","
        + "d2:" + Luban.StringUtil.CollectionToString(d2) + ","
        + "e1:" + e1 + ","
        + "e2:" + e2 + ","
        + "e3:" + e3 + ","
        + "f1:" + f1 + ","
        + "f2:" + f2 + ","
        + "f3:" + f3 + ","
        + "s1:" + s1 + ","
        + "}";
    }
}

}

