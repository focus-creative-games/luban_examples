//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.cost
{

public abstract partial class Cost :  Bright.Config.EditorBeanBase 
{
    public Cost()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {        
    }

    public static Cost LoadJsonCost(SimpleJSON.JSONNode _json)
    {
        string type = _json["$type"];
        Cost obj;
        switch (type)
        {
            case "CostCurrency": obj = new cost.CostCurrency(); break;
            case "CostCurrencies": obj = new cost.CostCurrencies(); break;
            case "CostOneItem": obj = new cost.CostOneItem(); break;
            case "CostItem": obj = new cost.CostItem(); break;
            case "CostItems": obj = new cost.CostItems(); break;
            default: throw new SerializationException();
        }
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonCost(Cost _obj, SimpleJSON.JSONNode _json)
    {
        _json["$type"] = _obj.GetType().Name;
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

}
}
