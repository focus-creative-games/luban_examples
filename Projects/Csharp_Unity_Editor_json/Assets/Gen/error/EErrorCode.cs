//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace editor.cfg.error
{

    public enum EErrorCode
    {
        OK = 0,
        SERVER_NOT_EXISTS = 1,
        HAS_BIND_SERVER = 2,
        AUTH_FAIL = 3,
        NOT_BIND_SERVER = 4,
        SERVER_ACCESS_FAIL = 5,
        EXAMPLE_FLASH = 6,
        EXAMPLE_MSGBOX = 7,
        EXAMPLE_DLG_OK = 8,
        EXAMPLE_DLG_OK_CANCEL = 9,
        ROLE_CREATE_NAME_INVALID_CHAR = 100,
        ROLE_CREATE_NAME_EMPTY = 101,
        ROLE_CREATE_NAME_EXCEED_MAX_LENGTH = 102,
        ROLE_CREATE_ROLE_LIST_FULL = 103,
        ROLE_CREATE_INVALID_PROFESSION = 104,
        ROLE_CREATE_INVALID_GENDER = 105,
        ROLE_NOT_OWNED_BY_USER = 106,
        ROLE_LEVEL_NOT_ARRIVE = 107,
        PARAM_ILLEGAL = 200,
        TEMP_BAG_NOT_EMPTY = 201,
        ITEM_CAN_NOT_USE = 202,
        CURRENCY_NOT_ENOUGH = 203,
        BAG_IS_FULL = 204,
        ITEM_NOT_ENOUGH = 205,
        ITEM_IN_BAG = 206,
        GENDER_NOT_MATCH = 300,
        LEVEL_TOO_LOW = 301,
        LEVEL_TOO_HIGH = 302,
        EXCEED_LIMIT = 303,
        OVER_TIME = 304,
        SERVER_ERROR = 305,
        SKILL_NOT_IN_LIST = 400,
        SKILL_NOT_COOLDOWN = 401,
        SKILL_TARGET_NOT_EXIST = 402,
        SKILL_ANOTHER_CASTING = 403,
        SKILL_OUT_OF_DISTANCE = 404,
        SKILL_TARGET_CAMP_NOT_MATCH = 405,
        SKILL_INVALID_DIRECTION = 406,
        SKILL_NOT_IN_SELECT_SHAPE = 407,
        SKILL_ENERGY_NOT_ENOUGH = 408,
        DIALOG_NODE_NOT_CHOOSEN = 500,
        DIALOG_NOT_FINISH = 501,
        DIALOG_HAS_FINISH = 502,
        QUEST_STAGE_NOT_FINISHED = 503,
        QUEST_NOT_DOING = 504,
        QUEST_STAGE_NOT_DOING = 505,
        QUEST_HAS_ACCEPTED = 506,
        MAP_OBJECT_NOT_EXIST = 600,
        INTERACTION_OBJECT_NOT_SUPPORT_OPERATION = 601,
        HAS_NOT_EQUIP = 602,
        HANDHELD_EQUIP_ID_NOT_MATCH = 603,
        NOT_AVAILABLE_SUIT_ID = 604,
        NO_INTERACTION_COMPONENT = 605,
        HAS_INTERACTED = 606,
        VIALITY_NOT_ENOUGH = 607,
        PLAYER_SESSION_NOT_EXIST = 608,
        PLAYER_SESSION_WORLD_PLAYER_NOT_INIT = 609,
        MAP_NOT_EXIST = 610,
        MAIL_TYPE_ERROR = 700,
        MAIL_NOT_EXITST = 701,
        MAIL_HAVE_DELETED = 702,
        MAIL_AWARD_HAVE_RECEIVED = 703,
        MAIL_OPERATE_TYPE_ERROR = 704,
        MAIL_CONDITION_NOT_MEET = 705,
        MAIL_STATE_ERROR = 706,
        MAIL_NO_AWARD = 707,
        MAIL_BOX_IS_FULL = 708,
        PROP_SCORE_NOT_BIGGER_THAN = 800,
        NOT_WEAR_CLOTHES = 801,
        NOT_WEAR_SUIT = 802,
        SUIT_NOT_UNLOCK = 900,
        SUIT_COMPONENT_NOT_UNLOCK = 901,
        SUIT_STATE_ERROR = 902,
        SUIT_COMPONENT_STATE_ERROR = 903,
        SUIT_COMPONENT_NO_NEED_LEARN = 904,
        STORE_NOT_ENABLED = 1000,
        SHELF_NOT_ENABLED = 1001,
        GOODS_NOT_ENABLED = 1002,
        GOODS_NOT_IN_CUR_REFRESH = 1003,
        RETRY = 1100,
        NOT_COOLDOWN = 1101,
        SELFIE_UNLOCK = 1200,
        SELFIE_ALREADY_UNLOCK = 1201,
        SELFIE_LACK_STARTS = 1202,
        SELFIE_HAD_REWARD = 1203,
    }

    public static partial class EErrorCode_Metadata
    {
        public static readonly Bright.Config.EditorEnumItemInfo OK = new Bright.Config.EditorEnumItemInfo("OK", "", 0, "");
        public static readonly Bright.Config.EditorEnumItemInfo SERVER_NOT_EXISTS = new Bright.Config.EditorEnumItemInfo("SERVER_NOT_EXISTS", "", 1, "");
        public static readonly Bright.Config.EditorEnumItemInfo HAS_BIND_SERVER = new Bright.Config.EditorEnumItemInfo("HAS_BIND_SERVER", "", 2, "");
        public static readonly Bright.Config.EditorEnumItemInfo AUTH_FAIL = new Bright.Config.EditorEnumItemInfo("AUTH_FAIL", "", 3, "");
        public static readonly Bright.Config.EditorEnumItemInfo NOT_BIND_SERVER = new Bright.Config.EditorEnumItemInfo("NOT_BIND_SERVER", "", 4, "");
        public static readonly Bright.Config.EditorEnumItemInfo SERVER_ACCESS_FAIL = new Bright.Config.EditorEnumItemInfo("SERVER_ACCESS_FAIL", "", 5, "");
        public static readonly Bright.Config.EditorEnumItemInfo EXAMPLE_FLASH = new Bright.Config.EditorEnumItemInfo("EXAMPLE_FLASH", "", 6, "");
        public static readonly Bright.Config.EditorEnumItemInfo EXAMPLE_MSGBOX = new Bright.Config.EditorEnumItemInfo("EXAMPLE_MSGBOX", "", 7, "");
        public static readonly Bright.Config.EditorEnumItemInfo EXAMPLE_DLG_OK = new Bright.Config.EditorEnumItemInfo("EXAMPLE_DLG_OK", "", 8, "");
        public static readonly Bright.Config.EditorEnumItemInfo EXAMPLE_DLG_OK_CANCEL = new Bright.Config.EditorEnumItemInfo("EXAMPLE_DLG_OK_CANCEL", "", 9, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_CREATE_NAME_INVALID_CHAR = new Bright.Config.EditorEnumItemInfo("ROLE_CREATE_NAME_INVALID_CHAR", "", 100, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_CREATE_NAME_EMPTY = new Bright.Config.EditorEnumItemInfo("ROLE_CREATE_NAME_EMPTY", "", 101, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_CREATE_NAME_EXCEED_MAX_LENGTH = new Bright.Config.EditorEnumItemInfo("ROLE_CREATE_NAME_EXCEED_MAX_LENGTH", "", 102, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_CREATE_ROLE_LIST_FULL = new Bright.Config.EditorEnumItemInfo("ROLE_CREATE_ROLE_LIST_FULL", "", 103, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_CREATE_INVALID_PROFESSION = new Bright.Config.EditorEnumItemInfo("ROLE_CREATE_INVALID_PROFESSION", "", 104, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_CREATE_INVALID_GENDER = new Bright.Config.EditorEnumItemInfo("ROLE_CREATE_INVALID_GENDER", "", 105, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_NOT_OWNED_BY_USER = new Bright.Config.EditorEnumItemInfo("ROLE_NOT_OWNED_BY_USER", "", 106, "");
        public static readonly Bright.Config.EditorEnumItemInfo ROLE_LEVEL_NOT_ARRIVE = new Bright.Config.EditorEnumItemInfo("ROLE_LEVEL_NOT_ARRIVE", "", 107, "");
        public static readonly Bright.Config.EditorEnumItemInfo PARAM_ILLEGAL = new Bright.Config.EditorEnumItemInfo("PARAM_ILLEGAL", "", 200, "");
        public static readonly Bright.Config.EditorEnumItemInfo TEMP_BAG_NOT_EMPTY = new Bright.Config.EditorEnumItemInfo("TEMP_BAG_NOT_EMPTY", "", 201, "");
        public static readonly Bright.Config.EditorEnumItemInfo ITEM_CAN_NOT_USE = new Bright.Config.EditorEnumItemInfo("ITEM_CAN_NOT_USE", "", 202, "");
        public static readonly Bright.Config.EditorEnumItemInfo CURRENCY_NOT_ENOUGH = new Bright.Config.EditorEnumItemInfo("CURRENCY_NOT_ENOUGH", "", 203, "");
        public static readonly Bright.Config.EditorEnumItemInfo BAG_IS_FULL = new Bright.Config.EditorEnumItemInfo("BAG_IS_FULL", "", 204, "");
        public static readonly Bright.Config.EditorEnumItemInfo ITEM_NOT_ENOUGH = new Bright.Config.EditorEnumItemInfo("ITEM_NOT_ENOUGH", "", 205, "");
        public static readonly Bright.Config.EditorEnumItemInfo ITEM_IN_BAG = new Bright.Config.EditorEnumItemInfo("ITEM_IN_BAG", "", 206, "");
        public static readonly Bright.Config.EditorEnumItemInfo GENDER_NOT_MATCH = new Bright.Config.EditorEnumItemInfo("GENDER_NOT_MATCH", "", 300, "");
        public static readonly Bright.Config.EditorEnumItemInfo LEVEL_TOO_LOW = new Bright.Config.EditorEnumItemInfo("LEVEL_TOO_LOW", "", 301, "");
        public static readonly Bright.Config.EditorEnumItemInfo LEVEL_TOO_HIGH = new Bright.Config.EditorEnumItemInfo("LEVEL_TOO_HIGH", "", 302, "");
        public static readonly Bright.Config.EditorEnumItemInfo EXCEED_LIMIT = new Bright.Config.EditorEnumItemInfo("EXCEED_LIMIT", "", 303, "");
        public static readonly Bright.Config.EditorEnumItemInfo OVER_TIME = new Bright.Config.EditorEnumItemInfo("OVER_TIME", "", 304, "");
        public static readonly Bright.Config.EditorEnumItemInfo SERVER_ERROR = new Bright.Config.EditorEnumItemInfo("SERVER_ERROR", "", 305, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_NOT_IN_LIST = new Bright.Config.EditorEnumItemInfo("SKILL_NOT_IN_LIST", "", 400, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_NOT_COOLDOWN = new Bright.Config.EditorEnumItemInfo("SKILL_NOT_COOLDOWN", "", 401, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_TARGET_NOT_EXIST = new Bright.Config.EditorEnumItemInfo("SKILL_TARGET_NOT_EXIST", "", 402, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_ANOTHER_CASTING = new Bright.Config.EditorEnumItemInfo("SKILL_ANOTHER_CASTING", "", 403, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_OUT_OF_DISTANCE = new Bright.Config.EditorEnumItemInfo("SKILL_OUT_OF_DISTANCE", "", 404, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_TARGET_CAMP_NOT_MATCH = new Bright.Config.EditorEnumItemInfo("SKILL_TARGET_CAMP_NOT_MATCH", "", 405, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_INVALID_DIRECTION = new Bright.Config.EditorEnumItemInfo("SKILL_INVALID_DIRECTION", "", 406, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_NOT_IN_SELECT_SHAPE = new Bright.Config.EditorEnumItemInfo("SKILL_NOT_IN_SELECT_SHAPE", "", 407, "");
        public static readonly Bright.Config.EditorEnumItemInfo SKILL_ENERGY_NOT_ENOUGH = new Bright.Config.EditorEnumItemInfo("SKILL_ENERGY_NOT_ENOUGH", "", 408, "");
        public static readonly Bright.Config.EditorEnumItemInfo DIALOG_NODE_NOT_CHOOSEN = new Bright.Config.EditorEnumItemInfo("DIALOG_NODE_NOT_CHOOSEN", "", 500, "");
        public static readonly Bright.Config.EditorEnumItemInfo DIALOG_NOT_FINISH = new Bright.Config.EditorEnumItemInfo("DIALOG_NOT_FINISH", "", 501, "");
        public static readonly Bright.Config.EditorEnumItemInfo DIALOG_HAS_FINISH = new Bright.Config.EditorEnumItemInfo("DIALOG_HAS_FINISH", "", 502, "");
        public static readonly Bright.Config.EditorEnumItemInfo QUEST_STAGE_NOT_FINISHED = new Bright.Config.EditorEnumItemInfo("QUEST_STAGE_NOT_FINISHED", "", 503, "");
        public static readonly Bright.Config.EditorEnumItemInfo QUEST_NOT_DOING = new Bright.Config.EditorEnumItemInfo("QUEST_NOT_DOING", "", 504, "");
        public static readonly Bright.Config.EditorEnumItemInfo QUEST_STAGE_NOT_DOING = new Bright.Config.EditorEnumItemInfo("QUEST_STAGE_NOT_DOING", "", 505, "");
        public static readonly Bright.Config.EditorEnumItemInfo QUEST_HAS_ACCEPTED = new Bright.Config.EditorEnumItemInfo("QUEST_HAS_ACCEPTED", "", 506, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAP_OBJECT_NOT_EXIST = new Bright.Config.EditorEnumItemInfo("MAP_OBJECT_NOT_EXIST", "", 600, "");
        public static readonly Bright.Config.EditorEnumItemInfo INTERACTION_OBJECT_NOT_SUPPORT_OPERATION = new Bright.Config.EditorEnumItemInfo("INTERACTION_OBJECT_NOT_SUPPORT_OPERATION", "", 601, "");
        public static readonly Bright.Config.EditorEnumItemInfo HAS_NOT_EQUIP = new Bright.Config.EditorEnumItemInfo("HAS_NOT_EQUIP", "", 602, "");
        public static readonly Bright.Config.EditorEnumItemInfo HANDHELD_EQUIP_ID_NOT_MATCH = new Bright.Config.EditorEnumItemInfo("HANDHELD_EQUIP_ID_NOT_MATCH", "", 603, "");
        public static readonly Bright.Config.EditorEnumItemInfo NOT_AVAILABLE_SUIT_ID = new Bright.Config.EditorEnumItemInfo("NOT_AVAILABLE_SUIT_ID", "", 604, "");
        public static readonly Bright.Config.EditorEnumItemInfo NO_INTERACTION_COMPONENT = new Bright.Config.EditorEnumItemInfo("NO_INTERACTION_COMPONENT", "", 605, "");
        public static readonly Bright.Config.EditorEnumItemInfo HAS_INTERACTED = new Bright.Config.EditorEnumItemInfo("HAS_INTERACTED", "", 606, "");
        public static readonly Bright.Config.EditorEnumItemInfo VIALITY_NOT_ENOUGH = new Bright.Config.EditorEnumItemInfo("VIALITY_NOT_ENOUGH", "", 607, "");
        public static readonly Bright.Config.EditorEnumItemInfo PLAYER_SESSION_NOT_EXIST = new Bright.Config.EditorEnumItemInfo("PLAYER_SESSION_NOT_EXIST", "", 608, "");
        public static readonly Bright.Config.EditorEnumItemInfo PLAYER_SESSION_WORLD_PLAYER_NOT_INIT = new Bright.Config.EditorEnumItemInfo("PLAYER_SESSION_WORLD_PLAYER_NOT_INIT", "", 609, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAP_NOT_EXIST = new Bright.Config.EditorEnumItemInfo("MAP_NOT_EXIST", "", 610, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_TYPE_ERROR = new Bright.Config.EditorEnumItemInfo("MAIL_TYPE_ERROR", "", 700, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_NOT_EXITST = new Bright.Config.EditorEnumItemInfo("MAIL_NOT_EXITST", "", 701, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_HAVE_DELETED = new Bright.Config.EditorEnumItemInfo("MAIL_HAVE_DELETED", "", 702, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_AWARD_HAVE_RECEIVED = new Bright.Config.EditorEnumItemInfo("MAIL_AWARD_HAVE_RECEIVED", "", 703, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_OPERATE_TYPE_ERROR = new Bright.Config.EditorEnumItemInfo("MAIL_OPERATE_TYPE_ERROR", "", 704, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_CONDITION_NOT_MEET = new Bright.Config.EditorEnumItemInfo("MAIL_CONDITION_NOT_MEET", "", 705, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_STATE_ERROR = new Bright.Config.EditorEnumItemInfo("MAIL_STATE_ERROR", "", 706, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_NO_AWARD = new Bright.Config.EditorEnumItemInfo("MAIL_NO_AWARD", "", 707, "");
        public static readonly Bright.Config.EditorEnumItemInfo MAIL_BOX_IS_FULL = new Bright.Config.EditorEnumItemInfo("MAIL_BOX_IS_FULL", "", 708, "");
        public static readonly Bright.Config.EditorEnumItemInfo PROP_SCORE_NOT_BIGGER_THAN = new Bright.Config.EditorEnumItemInfo("PROP_SCORE_NOT_BIGGER_THAN", "", 800, "");
        public static readonly Bright.Config.EditorEnumItemInfo NOT_WEAR_CLOTHES = new Bright.Config.EditorEnumItemInfo("NOT_WEAR_CLOTHES", "", 801, "");
        public static readonly Bright.Config.EditorEnumItemInfo NOT_WEAR_SUIT = new Bright.Config.EditorEnumItemInfo("NOT_WEAR_SUIT", "", 802, "");
        public static readonly Bright.Config.EditorEnumItemInfo SUIT_NOT_UNLOCK = new Bright.Config.EditorEnumItemInfo("SUIT_NOT_UNLOCK", "", 900, "");
        public static readonly Bright.Config.EditorEnumItemInfo SUIT_COMPONENT_NOT_UNLOCK = new Bright.Config.EditorEnumItemInfo("SUIT_COMPONENT_NOT_UNLOCK", "", 901, "");
        public static readonly Bright.Config.EditorEnumItemInfo SUIT_STATE_ERROR = new Bright.Config.EditorEnumItemInfo("SUIT_STATE_ERROR", "", 902, "");
        public static readonly Bright.Config.EditorEnumItemInfo SUIT_COMPONENT_STATE_ERROR = new Bright.Config.EditorEnumItemInfo("SUIT_COMPONENT_STATE_ERROR", "", 903, "");
        public static readonly Bright.Config.EditorEnumItemInfo SUIT_COMPONENT_NO_NEED_LEARN = new Bright.Config.EditorEnumItemInfo("SUIT_COMPONENT_NO_NEED_LEARN", "", 904, "");
        public static readonly Bright.Config.EditorEnumItemInfo STORE_NOT_ENABLED = new Bright.Config.EditorEnumItemInfo("STORE_NOT_ENABLED", "", 1000, "");
        public static readonly Bright.Config.EditorEnumItemInfo SHELF_NOT_ENABLED = new Bright.Config.EditorEnumItemInfo("SHELF_NOT_ENABLED", "", 1001, "");
        public static readonly Bright.Config.EditorEnumItemInfo GOODS_NOT_ENABLED = new Bright.Config.EditorEnumItemInfo("GOODS_NOT_ENABLED", "", 1002, "");
        public static readonly Bright.Config.EditorEnumItemInfo GOODS_NOT_IN_CUR_REFRESH = new Bright.Config.EditorEnumItemInfo("GOODS_NOT_IN_CUR_REFRESH", "", 1003, "");
        public static readonly Bright.Config.EditorEnumItemInfo RETRY = new Bright.Config.EditorEnumItemInfo("RETRY", "", 1100, "");
        public static readonly Bright.Config.EditorEnumItemInfo NOT_COOLDOWN = new Bright.Config.EditorEnumItemInfo("NOT_COOLDOWN", "", 1101, "");
        public static readonly Bright.Config.EditorEnumItemInfo SELFIE_UNLOCK = new Bright.Config.EditorEnumItemInfo("SELFIE_UNLOCK", "", 1200, "");
        public static readonly Bright.Config.EditorEnumItemInfo SELFIE_ALREADY_UNLOCK = new Bright.Config.EditorEnumItemInfo("SELFIE_ALREADY_UNLOCK", "", 1201, "");
        public static readonly Bright.Config.EditorEnumItemInfo SELFIE_LACK_STARTS = new Bright.Config.EditorEnumItemInfo("SELFIE_LACK_STARTS", "", 1202, "");
        public static readonly Bright.Config.EditorEnumItemInfo SELFIE_HAD_REWARD = new Bright.Config.EditorEnumItemInfo("SELFIE_HAD_REWARD", "", 1203, "");

        private static readonly System.Collections.Generic.List<Bright.Config.EditorEnumItemInfo> __items = new System.Collections.Generic.List<Bright.Config.EditorEnumItemInfo>
        {
            OK,
            SERVER_NOT_EXISTS,
            HAS_BIND_SERVER,
            AUTH_FAIL,
            NOT_BIND_SERVER,
            SERVER_ACCESS_FAIL,
            EXAMPLE_FLASH,
            EXAMPLE_MSGBOX,
            EXAMPLE_DLG_OK,
            EXAMPLE_DLG_OK_CANCEL,
            ROLE_CREATE_NAME_INVALID_CHAR,
            ROLE_CREATE_NAME_EMPTY,
            ROLE_CREATE_NAME_EXCEED_MAX_LENGTH,
            ROLE_CREATE_ROLE_LIST_FULL,
            ROLE_CREATE_INVALID_PROFESSION,
            ROLE_CREATE_INVALID_GENDER,
            ROLE_NOT_OWNED_BY_USER,
            ROLE_LEVEL_NOT_ARRIVE,
            PARAM_ILLEGAL,
            TEMP_BAG_NOT_EMPTY,
            ITEM_CAN_NOT_USE,
            CURRENCY_NOT_ENOUGH,
            BAG_IS_FULL,
            ITEM_NOT_ENOUGH,
            ITEM_IN_BAG,
            GENDER_NOT_MATCH,
            LEVEL_TOO_LOW,
            LEVEL_TOO_HIGH,
            EXCEED_LIMIT,
            OVER_TIME,
            SERVER_ERROR,
            SKILL_NOT_IN_LIST,
            SKILL_NOT_COOLDOWN,
            SKILL_TARGET_NOT_EXIST,
            SKILL_ANOTHER_CASTING,
            SKILL_OUT_OF_DISTANCE,
            SKILL_TARGET_CAMP_NOT_MATCH,
            SKILL_INVALID_DIRECTION,
            SKILL_NOT_IN_SELECT_SHAPE,
            SKILL_ENERGY_NOT_ENOUGH,
            DIALOG_NODE_NOT_CHOOSEN,
            DIALOG_NOT_FINISH,
            DIALOG_HAS_FINISH,
            QUEST_STAGE_NOT_FINISHED,
            QUEST_NOT_DOING,
            QUEST_STAGE_NOT_DOING,
            QUEST_HAS_ACCEPTED,
            MAP_OBJECT_NOT_EXIST,
            INTERACTION_OBJECT_NOT_SUPPORT_OPERATION,
            HAS_NOT_EQUIP,
            HANDHELD_EQUIP_ID_NOT_MATCH,
            NOT_AVAILABLE_SUIT_ID,
            NO_INTERACTION_COMPONENT,
            HAS_INTERACTED,
            VIALITY_NOT_ENOUGH,
            PLAYER_SESSION_NOT_EXIST,
            PLAYER_SESSION_WORLD_PLAYER_NOT_INIT,
            MAP_NOT_EXIST,
            MAIL_TYPE_ERROR,
            MAIL_NOT_EXITST,
            MAIL_HAVE_DELETED,
            MAIL_AWARD_HAVE_RECEIVED,
            MAIL_OPERATE_TYPE_ERROR,
            MAIL_CONDITION_NOT_MEET,
            MAIL_STATE_ERROR,
            MAIL_NO_AWARD,
            MAIL_BOX_IS_FULL,
            PROP_SCORE_NOT_BIGGER_THAN,
            NOT_WEAR_CLOTHES,
            NOT_WEAR_SUIT,
            SUIT_NOT_UNLOCK,
            SUIT_COMPONENT_NOT_UNLOCK,
            SUIT_STATE_ERROR,
            SUIT_COMPONENT_STATE_ERROR,
            SUIT_COMPONENT_NO_NEED_LEARN,
            STORE_NOT_ENABLED,
            SHELF_NOT_ENABLED,
            GOODS_NOT_ENABLED,
            GOODS_NOT_IN_CUR_REFRESH,
            RETRY,
            NOT_COOLDOWN,
            SELFIE_UNLOCK,
            SELFIE_ALREADY_UNLOCK,
            SELFIE_LACK_STARTS,
            SELFIE_HAD_REWARD,
        };

        public static System.Collections.Generic.List<Bright.Config.EditorEnumItemInfo> GetItems() => __items;

        public static Bright.Config.EditorEnumItemInfo GetByName(string name)
        {
            return __items.Find(c => c.Name == name);
        }

        public static Bright.Config.EditorEnumItemInfo GetByNameOrAlias(string name)
        {
            return __items.Find(c => c.Name == name || c.Alias == name);
        }

        public static Bright.Config.EditorEnumItemInfo GetByValue(int value)
        {
            return __items.Find(c => c.Value == value);
        }
    }
}
