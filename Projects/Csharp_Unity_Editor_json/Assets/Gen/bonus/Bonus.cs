//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace editor.cfg.bonus
{

public abstract partial class Bonus :  Bright.Config.EditorBeanBase 
{
    public Bonus()
    {
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {        
    }

    public static Bonus LoadJsonBonus(SimpleJSON.JSONNode _json)
    {
        string type = _json["$type"];
        Bonus obj;
        switch (type)
        {
            case "OneItem": obj = new bonus.OneItem(); break;
            case "OneItems": obj = new bonus.OneItems(); break;
            case "Item": obj = new bonus.Item(); break;
            case "Items": obj = new bonus.Items(); break;
            case "CoefficientItem": obj = new bonus.CoefficientItem(); break;
            case "WeightItems": obj = new bonus.WeightItems(); break;
            case "ProbabilityItems": obj = new bonus.ProbabilityItems(); break;
            case "MultiBonus": obj = new bonus.MultiBonus(); break;
            case "ProbabilityBonus": obj = new bonus.ProbabilityBonus(); break;
            case "WeightBonus": obj = new bonus.WeightBonus(); break;
            case "DropBonus": obj = new bonus.DropBonus(); break;
            default: throw new SerializationException();
        }
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonBonus(Bonus _obj, SimpleJSON.JSONNode _json)
    {
        _json["$type"] = _obj.GetType().Name;
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

}
}
