
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;
using UnityEngine;
using System.Linq;

namespace editor.cfg.ai
{

public sealed class BlackboardKey :  Luban.EditorBeanBase 
{
    public BlackboardKey()
    {
            name = "";
            desc = "";
            keyType = ai.EKeyType.BOOL;
            typeClassName = "";
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["name"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  name = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["desc"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  desc = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["is_static"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsBoolean) { throw new SerializationException(); }  isStatic = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["key_type"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { keyType = (ai.EKeyType)System.Enum.Parse(typeof(ai.EKeyType), _fieldJson); } else if(_fieldJson.IsNumber) { keyType = (ai.EKeyType)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
        }
        
        { 
            var _fieldJson = _json["type_class_name"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsString) { throw new SerializationException(); }  typeClassName = _fieldJson;
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {

            if (name == null) { throw new System.ArgumentNullException(); }
            _json["name"] = new JSONString(name);
        }
        {

            if (desc == null) { throw new System.ArgumentNullException(); }
            _json["desc"] = new JSONString(desc);
        }
        {
            _json["is_static"] = new JSONBool(isStatic);
        }
        {
            _json["key_type"] = new JSONNumber((int)keyType);
        }
        {

            if (typeClassName == null) { throw new System.ArgumentNullException(); }
            _json["type_class_name"] = new JSONString(typeClassName);
        }
    }


    public override void Render()
    {
        UnityEditor.EditorGUILayout.BeginVertical();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("name", GUILayout.Width(100));
        name = UnityEditor.EditorGUILayout.TextField(name, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("desc", GUILayout.Width(100));
        desc = UnityEditor.EditorGUILayout.TextField(desc, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("is_static", GUILayout.Width(100));
        isStatic = UnityEditor.EditorGUILayout.Toggle(isStatic, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("key_type", GUILayout.Width(100));
        keyType = (ai.EKeyType)UnityEditor.EditorGUILayout.EnumPopup(keyType, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.BeginHorizontal();
        UnityEditor.EditorGUILayout.LabelField("type_class_name", GUILayout.Width(100));
        typeClassName = UnityEditor.EditorGUILayout.TextField(typeClassName, GUILayout.Width(150));
        UnityEditor.EditorGUILayout.EndHorizontal();
        UnityEditor.EditorGUILayout.EndVertical();
    }

    public static BlackboardKey LoadJsonBlackboardKey(SimpleJSON.JSONNode _json)
    {
        BlackboardKey obj = new ai.BlackboardKey();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonBlackboardKey(BlackboardKey _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    public string name;
    public UnityEngine.Object name_UnityObject;
    public string desc;
    public UnityEngine.Object desc_UnityObject;
    public bool isStatic;
    public UnityEngine.Object isStatic_UnityObject;
    public ai.EKeyType keyType;
    public UnityEngine.Object keyType_UnityObject;
    public string typeClassName;
    public UnityEngine.Object typeClassName_UnityObject;

    public override string ToString()
    {
        return "{ "
        + "name:" + name + ","
        + "desc:" + desc + ","
        + "isStatic:" + isStatic + ","
        + "keyType:" + keyType + ","
        + "typeClassName:" + typeClassName + ","
        + "}";
    }
}

}

