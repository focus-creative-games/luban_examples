//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.condition
{

public abstract partial class Condition :  Bright.Config.BeanBase 
{
    public Condition(ByteBuf _buf) 
    {
        PostInit();
    }

    public static Condition DeserializeCondition(ByteBuf _buf)
    {
        switch (_buf.ReadInt())
        {
            case condition.TimeRange.__ID__: return new condition.TimeRange(_buf);
            case condition.MultiRoleCondition.__ID__: return new condition.MultiRoleCondition(_buf);
            case condition.GenderLimit.__ID__: return new condition.GenderLimit(_buf);
            case condition.MinLevel.__ID__: return new condition.MinLevel(_buf);
            case condition.MaxLevel.__ID__: return new condition.MaxLevel(_buf);
            case condition.MinMaxLevel.__ID__: return new condition.MinMaxLevel(_buf);
            case condition.ClothesPropertyScoreGreaterThan.__ID__: return new condition.ClothesPropertyScoreGreaterThan(_buf);
            case condition.ContainsItem.__ID__: return new condition.ContainsItem(_buf);
            default: throw new SerializationException();
        }
    }



    public virtual void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public virtual void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
