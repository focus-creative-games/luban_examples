//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.cost
{

public sealed partial class CostCurrencies :  cost.Cost 
{
    public CostCurrencies(ByteBuf _buf)  : base(_buf) 
    {
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Currencies = new System.Collections.Generic.List<cost.CostCurrency>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { cost.CostCurrency _e0;  _e0 = cost.CostCurrency.DeserializeCostCurrency(_buf); Currencies.Add(_e0);}}
        PostInit();
    }

    public static CostCurrencies DeserializeCostCurrencies(ByteBuf _buf)
    {
        return new cost.CostCurrencies(_buf);
    }

    public System.Collections.Generic.List<cost.CostCurrency> Currencies { get; private set; }

    public const int __ID__ = 103084157;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        foreach(var _e in Currencies) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
        foreach(var _e in Currencies) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Currencies:" + Bright.Common.StringUtil.CollectionToString(Currencies) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
