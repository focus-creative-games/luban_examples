
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.ai
{
    public abstract partial class FlowNode : ai.Node
    {
        public FlowNode(ByteBuf _buf)  : base(_buf) 
        {
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Decorators = new System.Collections.Generic.List<ai.Decorator>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { ai.Decorator _e0;  _e0 = ai.Decorator.DeserializeDecorator(_buf); Decorators.Add(_e0);}}
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Services = new System.Collections.Generic.List<ai.Service>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { ai.Service _e0;  _e0 = ai.Service.DeserializeService(_buf); Services.Add(_e0);}}
        }

        public static FlowNode DeserializeFlowNode(ByteBuf _buf)
        {
            switch (_buf.ReadInt())
            {
                case ai.Sequence.__ID__: return new ai.Sequence(_buf);
                case ai.Selector.__ID__: return new ai.Selector(_buf);
                case ai.SimpleParallel.__ID__: return new ai.SimpleParallel(_buf);
                case ai.UeWait.__ID__: return new ai.UeWait(_buf);
                case ai.UeWaitBlackboardTime.__ID__: return new ai.UeWaitBlackboardTime(_buf);
                case ai.MoveToTarget.__ID__: return new ai.MoveToTarget(_buf);
                case ai.ChooseSkill.__ID__: return new ai.ChooseSkill(_buf);
                case ai.MoveToRandomLocation.__ID__: return new ai.MoveToRandomLocation(_buf);
                case ai.MoveToLocation.__ID__: return new ai.MoveToLocation(_buf);
                case ai.DebugPrint.__ID__: return new ai.DebugPrint(_buf);
                default: throw new SerializationException();
            }
        }

        public readonly System.Collections.Generic.List<ai.Decorator> Decorators;
        public readonly System.Collections.Generic.List<ai.Service> Services;
   

        public override void ResolveRef(Tables tables)
        {
            base.ResolveRef(tables);
            foreach (var _e in Decorators) { _e?.ResolveRef(tables); }
            foreach (var _e in Services) { _e?.ResolveRef(tables); }
        }

        public override string ToString()
        {
            return "{ "
            + "id:" + Id + ","
            + "nodeName:" + NodeName + ","
            + "decorators:" + Luban.StringUtil.CollectionToString(Decorators) + ","
            + "services:" + Luban.StringUtil.CollectionToString(Services) + ","
            + "}";
        }
    }

}
