
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace cfg
{
    public partial class Tables
    {
        
        
        public ai.TbBlackboard TbBlackboard {get; }
        
        public ai.TbBehaviorTree TbBehaviorTree {get; }
        
        public common.TbGlobalConfig TbGlobalConfig {get; }
        
        /// <summary>
        /// 道具表
        /// </summary>
        public item.TbItem TbItem {get; }
        
        public l10n.TbL10NDemo TbL10NDemo {get; }
        
        public l10n.TbPatchDemo TbPatchDemo {get; }
        
        public tag.TbTestTag TbTestTag {get; }
        
        public test.TbFullTypes TbFullTypes {get; }
        
        public test.TbSingleton TbSingleton {get; }
        
        public test.TbNotIndexList TbNotIndexList {get; }
        
        public test.TbMultiUnionIndexList TbMultiUnionIndexList {get; }
        
        public test.TbMultiIndexList TbMultiIndexList {get; }
        
        public test.TbDataFromMisc TbDataFromMisc {get; }
        
        public test.TbMultiRowRecord TbMultiRowRecord {get; }
        
        public test.TbTestMultiColumn TbTestMultiColumn {get; }
        
        public test.TbMultiRowTitle TbMultiRowTitle {get; }
        
        public test.TbTestNull TbTestNull {get; }
        
        public test.TbDemoPrimitive TbDemoPrimitive {get; }
        
        public test.TbTestString TbTestString {get; }
        
        public test.TbDemoGroup TbDemoGroup {get; }
        
        public test.TbDemoGroup_C TbDemoGroupC {get; }
        
        public test.TbTestGlobal TbTestGlobal {get; }
        
        public test.TbTestBeRef TbTestBeRef {get; }
        
        public test.TbTestBeRef2 TbTestBeRef2 {get; }
        
        public test.TbTestRef TbTestRef {get; }
        
        public test.TbTestSize TbTestSize {get; }
        
        public test.TbTestSet TbTestSet {get; }
        
        public test.TbDetectCsvEncoding TbDetectCsvEncoding {get; }
        
        public test.TbItem2 TbItem2 {get; }
        
        public test.TbTestIndex TbTestIndex {get; }
        
        public test.TbTestMap TbTestMap {get; }
        
        public test.TbExcelFromJson TbExcelFromJson {get; }
        
        public test.TbCompositeJsonTable1 TbCompositeJsonTable1 {get; }
        
        public test.TbCompositeJsonTable2 TbCompositeJsonTable2 {get; }
        
        public test.TbCompositeJsonTable3 TbCompositeJsonTable3 {get; }
        
        public test.TbExcelFromJsonMultiRow TbExcelFromJsonMultiRow {get; }
        
        public test.TbTestScriptableObject TbTestScriptableObject {get; }
        
        public test.TbTestMapper TbTestMapper {get; }
        
        public test.TbDefineFromExcel2 TbDefineFromExcel2 {get; }
        public static readonly int TABLE_COUNT = 39;

        public Tables(System.Func<string, ByteBuf> offsetLoader,  System.Func<string, int, int, ByteBuf> byteBufLoader)
        {
            TbBlackboard = new ai.TbBlackboard(offsetLoader("ai_tbblackboard"), "ai_tbblackboard", byteBufLoader);
            TbBehaviorTree = new ai.TbBehaviorTree(offsetLoader("ai_tbbehaviortree"), "ai_tbbehaviortree", byteBufLoader);
            TbGlobalConfig = new common.TbGlobalConfig(offsetLoader("common_tbglobalconfig"), "common_tbglobalconfig", byteBufLoader);
            TbItem = new item.TbItem(offsetLoader("item_tbitem"), "item_tbitem", byteBufLoader);
            TbL10NDemo = new l10n.TbL10NDemo(offsetLoader("l10n_tbl10ndemo"), "l10n_tbl10ndemo", byteBufLoader);
            TbPatchDemo = new l10n.TbPatchDemo(offsetLoader("l10n_tbpatchdemo"), "l10n_tbpatchdemo", byteBufLoader);
            TbTestTag = new tag.TbTestTag(offsetLoader("tag_tbtesttag"), "tag_tbtesttag", byteBufLoader);
            TbFullTypes = new test.TbFullTypes(offsetLoader("test_tbfulltypes"), "test_tbfulltypes", byteBufLoader);
            TbSingleton = new test.TbSingleton(offsetLoader("test_tbsingleton"), "test_tbsingleton", byteBufLoader);
            TbNotIndexList = new test.TbNotIndexList(offsetLoader("test_tbnotindexlist"), "test_tbnotindexlist", byteBufLoader);
            TbMultiUnionIndexList = new test.TbMultiUnionIndexList(offsetLoader("test_tbmultiunionindexlist"), "test_tbmultiunionindexlist", byteBufLoader);
            TbMultiIndexList = new test.TbMultiIndexList(offsetLoader("test_tbmultiindexlist"), "test_tbmultiindexlist", byteBufLoader);
            TbDataFromMisc = new test.TbDataFromMisc(offsetLoader("test_tbdatafrommisc"), "test_tbdatafrommisc", byteBufLoader);
            TbMultiRowRecord = new test.TbMultiRowRecord(offsetLoader("test_tbmultirowrecord"), "test_tbmultirowrecord", byteBufLoader);
            TbTestMultiColumn = new test.TbTestMultiColumn(offsetLoader("test_tbtestmulticolumn"), "test_tbtestmulticolumn", byteBufLoader);
            TbMultiRowTitle = new test.TbMultiRowTitle(offsetLoader("test_tbmultirowtitle"), "test_tbmultirowtitle", byteBufLoader);
            TbTestNull = new test.TbTestNull(offsetLoader("test_tbtestnull"), "test_tbtestnull", byteBufLoader);
            TbDemoPrimitive = new test.TbDemoPrimitive(offsetLoader("test_tbdemoprimitive"), "test_tbdemoprimitive", byteBufLoader);
            TbTestString = new test.TbTestString(offsetLoader("test_tbteststring"), "test_tbteststring", byteBufLoader);
            TbDemoGroup = new test.TbDemoGroup(offsetLoader("test_tbdemogroup"), "test_tbdemogroup", byteBufLoader);
            TbDemoGroupC = new test.TbDemoGroup_C(offsetLoader("test_tbdemogroup_c"), "test_tbdemogroup_c", byteBufLoader);
            TbTestGlobal = new test.TbTestGlobal(offsetLoader("test_tbtestglobal"), "test_tbtestglobal", byteBufLoader);
            TbTestBeRef = new test.TbTestBeRef(offsetLoader("test_tbtestberef"), "test_tbtestberef", byteBufLoader);
            TbTestBeRef2 = new test.TbTestBeRef2(offsetLoader("test_tbtestberef2"), "test_tbtestberef2", byteBufLoader);
            TbTestRef = new test.TbTestRef(offsetLoader("test_tbtestref"), "test_tbtestref", byteBufLoader);
            TbTestSize = new test.TbTestSize(offsetLoader("test_tbtestsize"), "test_tbtestsize", byteBufLoader);
            TbTestSet = new test.TbTestSet(offsetLoader("test_tbtestset"), "test_tbtestset", byteBufLoader);
            TbDetectCsvEncoding = new test.TbDetectCsvEncoding(offsetLoader("test_tbdetectcsvencoding"), "test_tbdetectcsvencoding", byteBufLoader);
            TbItem2 = new test.TbItem2(offsetLoader("test_tbitem2"), "test_tbitem2", byteBufLoader);
            TbTestIndex = new test.TbTestIndex(offsetLoader("test_tbtestindex"), "test_tbtestindex", byteBufLoader);
            TbTestMap = new test.TbTestMap(offsetLoader("test_tbtestmap"), "test_tbtestmap", byteBufLoader);
            TbExcelFromJson = new test.TbExcelFromJson(offsetLoader("test_tbexcelfromjson"), "test_tbexcelfromjson", byteBufLoader);
            TbCompositeJsonTable1 = new test.TbCompositeJsonTable1(offsetLoader("test_tbcompositejsontable1"), "test_tbcompositejsontable1", byteBufLoader);
            TbCompositeJsonTable2 = new test.TbCompositeJsonTable2(offsetLoader("test_tbcompositejsontable2"), "test_tbcompositejsontable2", byteBufLoader);
            TbCompositeJsonTable3 = new test.TbCompositeJsonTable3(offsetLoader("test_tbcompositejsontable3"), "test_tbcompositejsontable3", byteBufLoader);
            TbExcelFromJsonMultiRow = new test.TbExcelFromJsonMultiRow(offsetLoader("test_tbexcelfromjsonmultirow"), "test_tbexcelfromjsonmultirow", byteBufLoader);
            TbTestScriptableObject = new test.TbTestScriptableObject(offsetLoader("test_tbtestscriptableobject"), "test_tbtestscriptableobject", byteBufLoader);
            TbTestMapper = new test.TbTestMapper(offsetLoader("test_tbtestmapper"), "test_tbtestmapper", byteBufLoader);
            TbDefineFromExcel2 = new test.TbDefineFromExcel2(offsetLoader("test_tbdefinefromexcel2"), "test_tbdefinefromexcel2", byteBufLoader);
            ResolveRef();
        }
    
        private void ResolveRef()
        {
            TbBlackboard.ResolveRef(this);
            TbBehaviorTree.ResolveRef(this);
            TbGlobalConfig.ResolveRef(this);
            TbItem.ResolveRef(this);
            TbL10NDemo.ResolveRef(this);
            TbPatchDemo.ResolveRef(this);
            TbTestTag.ResolveRef(this);
            TbFullTypes.ResolveRef(this);
            TbSingleton.ResolveRef(this);
            TbNotIndexList.ResolveRef(this);
            TbMultiUnionIndexList.ResolveRef(this);
            TbMultiIndexList.ResolveRef(this);
            TbDataFromMisc.ResolveRef(this);
            TbMultiRowRecord.ResolveRef(this);
            TbTestMultiColumn.ResolveRef(this);
            TbMultiRowTitle.ResolveRef(this);
            TbTestNull.ResolveRef(this);
            TbDemoPrimitive.ResolveRef(this);
            TbTestString.ResolveRef(this);
            TbDemoGroup.ResolveRef(this);
            TbDemoGroupC.ResolveRef(this);
            TbTestGlobal.ResolveRef(this);
            TbTestBeRef.ResolveRef(this);
            TbTestBeRef2.ResolveRef(this);
            TbTestRef.ResolveRef(this);
            TbTestSize.ResolveRef(this);
            TbTestSet.ResolveRef(this);
            TbDetectCsvEncoding.ResolveRef(this);
            TbItem2.ResolveRef(this);
            TbTestIndex.ResolveRef(this);
            TbTestMap.ResolveRef(this);
            TbExcelFromJson.ResolveRef(this);
            TbCompositeJsonTable1.ResolveRef(this);
            TbCompositeJsonTable2.ResolveRef(this);
            TbCompositeJsonTable3.ResolveRef(this);
            TbExcelFromJsonMultiRow.ResolveRef(this);
            TbTestScriptableObject.ResolveRef(this);
            TbTestMapper.ResolveRef(this);
            TbDefineFromExcel2.ResolveRef(this);
        }
    }

}
