
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg.test
{
    public sealed partial class TestRow : Luban.BeanBase
    {
        public TestRow(ByteBuf _buf) 
        {
            X = _buf.ReadInt();
            Y = _buf.ReadBool();
            Z = _buf.ReadString();
            A = test.Test3.DeserializeTest3(_buf);
            {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);B = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); B.Add(_e0);}}
        }

        public static TestRow DeserializeTestRow(ByteBuf _buf)
        {
            return new test.TestRow(_buf);
        }

        public readonly int X;
        public readonly bool Y;
        public readonly string Z;
        public readonly test.Test3 A;
        public readonly System.Collections.Generic.List<int> B;
   
        public const int __ID__ = -543222164;
        public override int GetTypeId() => __ID__;

        public  void ResolveRef(Tables tables)
        {
            
            
            
            A?.ResolveRef(tables);
            
        }

        public override string ToString()
        {
            return "{ "
            + "x:" + X + ","
            + "y:" + Y + ","
            + "z:" + Z + ","
            + "a:" + A + ","
            + "b:" + Luban.StringUtil.CollectionToString(B) + ","
            + "}";
        }
    }

}
