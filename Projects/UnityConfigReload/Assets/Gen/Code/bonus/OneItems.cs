//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Linq;



namespace cfg.bonus
{

public sealed partial class OneItems :  bonus.Bonus 
{
    public OneItems(ByteBuf _buf)  : base(_buf) 
    {
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Items = new int[n];for(var i = 0 ; i < n ; i++) { int _e;_e = _buf.ReadInt(); Items[i] = _e;}}
        PostInit();
    }

    public static OneItems DeserializeOneItems(ByteBuf _buf)
    {
        return new bonus.OneItems(_buf);
    }

    public int[] Items { get; protected set; }
    //field.gen_ref
    public item.Item[] Items_Ref { get; private set; }

    public const int __ID__ = 400179721;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        { int __n = Items.Length; item.TbItem __table = (item.TbItem)_tables["item.TbItem"]; this.Items_Ref = new item.Item[__n]; for(int i = 0 ; i < __n ; i++) { this.Items_Ref[i] =  __table.GetOrDefault(Items[i]); } }
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public void Reload(OneItems reloadData)
    {
        if(Items==null)
        {
            Items = reloadData.Items;
        }else
        {
                for(int i = 0; i<reloadData.Items.Length; i++)
                {
                    if(i<Items.Length)
                    {
                        Items[i] = reloadData.Items[i];
                    }
                }
        }
    }

    public override string ToString()
    {
        return "{ "
        + "Items:" + Bright.Common.StringUtil.CollectionToString(Items) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
